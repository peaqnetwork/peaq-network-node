[package]
name = "peaq-krest-runtime"
version = "4.0.0-polkadot-v1.7.2"
description = "A node of the peaq network."
authors = ["peaq network <https://github.com/peaqnetwork>"]
homepage = "https://peaq.network/"
edition = "2021"
license = "Unlicense"
publish = false
repository = "https://github.com/peaqnetwork/peaq-network-node/"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[build-dependencies.substrate-wasm-builder]
git = "https://github.com/peaqnetwork/polkadot-sdk"
branch = "peaq-polkadot-v1.7.2"

[dependencies]
# sp-debug-derive = { git = "https://github.com/peaqnetwork/polakdot-sdk", branch = "peaq-polkadot-v1.7.2", default-features = false, features = ["std", "force-debug"] }
parity-scale-codec = { workspace = true, default-features = false }
smallvec = { workspace = true, default-features = false }
rlp = { workspace = true, default-features = false, optional = true  }
sha3 = { workspace = true, default-features = false, optional = true  }
frame-benchmarking = { workspace = true, default-features = false, optional = true  }
frame-executive = { workspace = true, default-features = false }
frame-system = { workspace = true, default-features = false }
frame-system-benchmarking = { workspace = true, default-features = false, optional = true }
frame-system-rpc-runtime-api = { workspace = true, default-features = false }
hex-literal = { workspace = true, default-features = false, optional = true  }
pallet-aura = { workspace = true, default-features = false }
pallet-balances = { workspace = true, default-features = false }
pallet-insecure-randomness-collective-flip = { workspace = true, default-features = false }
pallet-sudo = { workspace = true, default-features = false }
pallet-timestamp = { workspace = true, default-features = false }
pallet-transaction-payment = { workspace = true, default-features = false }
pallet-transaction-payment-rpc-runtime-api = { workspace = true, default-features = false }
pallet-assets = { workspace = true, default-features = false }
scale-info = { workspace = true, default-features = false }
sp-api = { workspace = true, default-features = false }
sp-block-builder = { workspace = true, default-features = false }
sp-consensus-aura = { workspace = true, default-features = false }
sp-core = { workspace = true, default-features = false }
sp-inherents = { workspace = true, default-features = false }
sp-offchain = { workspace = true, default-features = false }
sp-runtime = { workspace = true, default-features = false }
sp-session = { workspace = true, default-features = false }
sp-std = { workspace = true, default-features = false }
sp-transaction-pool = { workspace = true, default-features = false }
sp-version = { workspace = true, default-features = false }
pallet-contracts = { workspace = true, default-features = false }
peaq-pallet-did = { workspace = true, default-features = false }
peaq-pallet-did-runtime-api = { workspace = true, default-features = false }
peaq-pallet-transaction = { workspace = true, default-features = false }
peaq-pallet-rbac = { workspace = true, default-features = false }
peaq-pallet-rbac-runtime-api = { workspace = true, default-features = false }
peaq-pallet-storage = { workspace = true, default-features = false }
peaq-pallet-storage-runtime-api = { workspace = true, default-features = false }
pallet-multisig = { workspace = true, default-features = false }
pallet-utility = { workspace = true, default-features = false }
pallet-treasury = { workspace = true, default-features = false }
pallet-vesting = { workspace = true, default-features = false }
sp-io = { workspace = true, default-features = false }
fp-evm = { workspace = true, default-features = false }
fp-rpc = { workspace = true, default-features = false }
fp-self-contained = { workspace = true, default-features = false }
pallet-base-fee = { workspace = true, default-features = false }
pallet-dynamic-fee = { workspace = true, default-features = false }
pallet-ethereum = { workspace = true, default-features = false, features = ["forbid-evm-reentrancy"] }
pallet-evm = { workspace = true, default-features = false, features = ["forbid-evm-reentrancy"] }
pallet-evm-precompile-blake2 = { workspace = true, default-features = false }
pallet-evm-precompile-bn128 = { workspace = true, default-features = false }
pallet-evm-precompile-dispatch = { workspace = true, default-features = false }
pallet-evm-precompile-modexp = { workspace = true, default-features = false }
pallet-evm-precompile-sha3fips = { workspace = true, default-features = false }
pallet-evm-precompile-simple = { workspace = true, default-features = false }
cumulus-primitives-core = { workspace = true, default-features = false }
cumulus-primitives-utility = { workspace = true, default-features = false }
cumulus-primitives-timestamp = { workspace = true, default-features = false }
cumulus-primitives-aura = { workspace = true, default-features = false }
cumulus-pallet-parachain-system = { workspace = true, default-features = false, features = ["parameterized-consensus-hook"] }
cumulus-pallet-aura-ext = { workspace = true, default-features = false }
parachain-info = { workspace = true, default-features = false }
parachains-common = { workspace = true, default-features = false }
polkadot-parachain = { workspace = true, default-features = false }
polkadot-primitives = { workspace = true, default-features = false }
polkadot-runtime-common = { workspace = true, default-features = false }
pallet-session = { workspace = true, default-features = false }
pallet-authorship = { workspace = true, default-features = false }
xcm = { workspace = true, default-features = false }
xcm-builder = { workspace = true, default-features = false }
xcm-executor = { workspace = true, default-features = false }
pallet-xcm = { workspace = true, default-features = false }
pallet-message-queue = { workspace = true, default-features = false }
cumulus-pallet-xcm = { workspace = true, default-features = false }
cumulus-pallet-xcmp-queue = { workspace = true, default-features = false }
cumulus-pallet-dmp-queue = { workspace = true, default-features = false }
orml-currencies = { workspace = true, default-features = false }
orml-traits = { workspace = true, default-features = false }
orml-xtokens = { workspace = true, default-features = false }
orml-xcm-support = { workspace = true, default-features = false }
pallet-collective = { workspace = true, default-features = false }
sp-weights = { workspace = true, default-features = false }

evm-tracing-events = { path = "../../primitives/rpc/evm-tracing-events", optional = true, default-features = false }
peaq-evm-tracer = { path = "../evm_tracer", optional = true, default-features = false }
peaq-rpc-primitives-debug = { path = "../../primitives/rpc/debug", default-features = false }
peaq-rpc-primitives-txpool = { path = "../../primitives/rpc/txpool", default-features = false }

frame-support = { workspace = true, default-features = false }

parachain-staking = { path = "../../pallets/parachain-staking", default-features = false }
pallet-block-reward = { path = "../../pallets/block-reward", default-features = false }
peaq-primitives-xcm = { path = "../../primitives/xcm", default-features = false }
precompile-utils = { path = "../../precompiles/utils", default-features = false }
pallet-evm-precompile-assets-erc20 = { path = "../../precompiles/assets-erc20", default-features = false }
pallet-evm-precompile-assets-factory = { path = "../../precompiles/assets-factory", default-features = false }
pallet-evm-precompile-batch = { path = "../../precompiles/batch", default-features = false }
pallet-evm-precompile-peaq-did = { path = "../../precompiles/peaq-did", default-features = false }
pallet-evm-precompile-peaq-storage = { path = "../../precompiles/peaq-storage", default-features = false }
pallet-evm-precompile-xtokens = { path = "../../precompiles/xtokens", default-features = false }
pallet-evm-precompile-xcm-utils = { path = "../../precompiles/xcm-utils", default-features = false }
pallet-evm-precompile-parachain-staking = { path = "../../precompiles/parachain-staking", default-features = false }
pallet-evm-precompile-vesting = { path = "../../precompiles/vesting", default-features = false }
pallet-evm-precompile-balances-erc20 = { path = "../../precompiles/balances-erc20", default-features = false}
runtime-common = { path = "../common", default-features = false }

xc-asset-config = { path = "../../pallets/xc-asset-config", default-features = false }
address-unification = { path = "../../pallets/address-unification", default-features = false }
inflation-manager = { path = "../../pallets/inflation-manager", default-features = false }

zenlink-protocol = { workspace = true, default-features = false }
zenlink-protocol-runtime-api = { workspace = true, default-features = false }

frame-try-runtime = { workspace = true, default-features = false, optional = true }
log = {workspace = true, default-features = false}
ethereum = {workspace = true, default-features = false}

pallet-evm-precompile-peaq-rbac = { path = "../../precompiles/peaq-rbac", default-features = false }

[features]
default = ["std", "aura", "parameterized-consensus-hook", "experimental"]

parameterized-consensus-hook = [
	"cumulus-pallet-parachain-system/parameterized-consensus-hook",
]

experimental = [
	"pallet-aura/experimental",
]

aura = []
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"hex-literal",
	"pallet-balances/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-multisig/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"pallet-contracts/runtime-benchmarks",
	"parachain-staking/runtime-benchmarks",
	"pallet-block-reward/runtime-benchmarks",
	"pallet-assets/runtime-benchmarks",
	"xc-asset-config/runtime-benchmarks",
	"address-unification/runtime-benchmarks",

	"pallet-ethereum/runtime-benchmarks",
	"pallet-collective/runtime-benchmarks",
	"pallet-xcm/runtime-benchmarks",
	"xcm-builder/runtime-benchmarks",
	"cumulus-pallet-xcmp-queue/runtime-benchmarks",
	"polkadot-parachain/runtime-benchmarks",

	"peaq-pallet-transaction/runtime-benchmarks",
	"peaq-pallet-did/runtime-benchmarks",
	"peaq-pallet-rbac/runtime-benchmarks",
	"peaq-pallet-storage/runtime-benchmarks",
	"inflation-manager/runtime-benchmarks",
]

std = [
	"parity-scale-codec/std",
	"scale-info/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"pallet-aura/std",
	"pallet-balances/std",
	"pallet-insecure-randomness-collective-flip/std",
	"pallet-sudo/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-multisig/std",
	"pallet-assets/std",

	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-core/std",
	"sp-inherents/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-std/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"sp-weights/std",
	"pallet-contracts/std",
	"peaq-pallet-did/std",
	"peaq-pallet-did-runtime-api/std",
	"peaq-pallet-transaction/std",
	"peaq-pallet-rbac/std",
	"peaq-pallet-rbac-runtime-api/std",
	"peaq-pallet-storage/std",
	"peaq-pallet-storage-runtime-api/std",
	"pallet-utility/std",
	"pallet-treasury/std",
	"pallet-collective/std",
	"pallet-vesting/std",

	# ETH support
	"sp-io/std",
	"fp-evm/std",
	"fp-self-contained/std",
	"pallet-base-fee/std",
	"pallet-dynamic-fee/std",
	"pallet-ethereum/std",
	"pallet-evm/std",
	"pallet-evm-precompile-simple/std",
	"pallet-evm-precompile-modexp/std",
	"pallet-evm-precompile-sha3fips/std",
	"sp-std/std",
	"fp-rpc/std",

	# Tracing
	"evm-tracing-events/std",
	"peaq-evm-tracer/std",
	"peaq-rpc-primitives-debug/std",
	"peaq-rpc-primitives-txpool/std",

	# Parachain
	"cumulus-primitives-core/std",
	"cumulus-primitives-utility/std",
	"cumulus-primitives-timestamp/std",
	"cumulus-primitives-aura/std",
	"cumulus-pallet-parachain-system/std",
	"cumulus-pallet-aura-ext/std",
	"parachain-info/std",
	"parachains-common/std",

    "polkadot-parachain/std",
    "polkadot-primitives/std",
    "polkadot-runtime-common/std",

	# Customized Parachain
    "pallet-session/std",
    "pallet-authorship/std",

    "parachain-staking/std",
    "pallet-block-reward/std",

	# XCM
    "xcm/std",
    "xcm-builder/std",
    "xcm-executor/std",
	"cumulus-pallet-xcm/std",
	"cumulus-pallet-xcmp-queue/std",
	"orml-currencies/std",
	"orml-traits/std",
	"orml-xtokens/std",
	"zenlink-protocol/std",
	"zenlink-protocol-runtime-api/std",
	"xc-asset-config/std",
	"address-unification/std",

	# Customized
	"peaq-primitives-xcm/std",
	"precompile-utils/std",
	"runtime-common/std",

	"pallet-evm-precompile-assets-erc20/std",
	"pallet-evm-precompile-assets-factory/std",
	"pallet-evm-precompile-balances-erc20/std",
	"pallet-evm-precompile-batch/std",
	"pallet-evm-precompile-peaq-did/std",
	"pallet-evm-precompile-peaq-storage/std",
	"pallet-evm-precompile-xtokens/std",
	"pallet-evm-precompile-xcm-utils/std",
	"pallet-evm-precompile-peaq-rbac/std",
	"pallet-evm-precompile-parachain-staking/std",
	"pallet-evm-precompile-vesting/std",
	"pallet-xcm/std",
	"inflation-manager/std",
	"pallet-message-queue/std",

	# try-runtime
	"frame-try-runtime/std",
	# "sp-debug-derive/std"
]

# Must be enabled for tracing runtimes only
evm-tracing = [
	"evm-tracing-events",
	"peaq-evm-tracer",
	"rlp",
	"sha3"
]

try-runtime = [
	"frame-try-runtime/try-runtime",
	"frame-executive/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"fp-self-contained/try-runtime",

	"cumulus-pallet-aura-ext/try-runtime",
	"cumulus-pallet-parachain-system/try-runtime",
	"cumulus-pallet-xcmp-queue/try-runtime",
	"cumulus-pallet-xcm/try-runtime",
	"cumulus-pallet-dmp-queue/try-runtime",

	"pallet-aura/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-insecure-randomness-collective-flip/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-evm/try-runtime",
	"pallet-dynamic-fee/try-runtime",
	"pallet-base-fee/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-contracts/try-runtime",
	"pallet-utility/try-runtime",
	"pallet-collective/try-runtime",
	"pallet-treasury/try-runtime",
	"pallet-ethereum/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-session/try-runtime",
	"pallet-block-reward/try-runtime",
	"pallet-xcm/try-runtime",
	"pallet-vesting/try-runtime",
	"pallet-multisig/try-runtime",
	"pallet-assets/try-runtime",

	"orml-currencies/try-runtime",
	"orml-xtokens/try-runtime",

	"peaq-pallet-did/try-runtime",
	"peaq-pallet-transaction/try-runtime",
	"peaq-pallet-storage/try-runtime",
	"peaq-pallet-rbac/try-runtime",

	"parachain-staking/try-runtime",
	"parachain-info/try-runtime",
	"xc-asset-config/try-runtime",
	"address-unification/try-runtime",
	"inflation-manager/try-runtime",

	"zenlink-protocol/try-runtime",
]
