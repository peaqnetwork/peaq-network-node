[package]
name = "peaq-node"
version = "4.0.0-polkadot-v1.7.2"
description = "A node of the peaq network."
authors = ["peaq network <https://github.com/peaqnetwork>"]
homepage = "https://peaq.network/"
edition = "2021"
license = "Unlicense"
publish = false
repository = "https://github.com/peaqnetwork/peaq-network-node/"
build = "build.rs"

[[bin]]
name = "peaq-node"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[build-dependencies.substrate-build-script-utils]
git = "https://github.com/peaqnetwork/polkadot-sdk"
branch = "peaq-polkadot-v1.7.2"

[dependencies]
# serde_json = { workspace = true, default-features = true }
structopt = { workspace = true, default-features = true }
async-trait = { workspace = true, default-features = true }
futures = { workspace = true, default-features = true }
flume = { workspace = true, default-features = true }
log = { workspace = true, default-features = true }
clap = { workspace = true, default-features = true, features = ["derive"] }
url = { workspace = true, default-features = true }
serde = { workspace = true, default-features = true, features = ["derive"] }
jsonrpsee = { workspace = true, default-features = true, features = [ "macros", "server" ] }
fc-storage = { workspace = true, default-features = true }

parity-scale-codec = { workspace = true, default-features = true }
frame-benchmarking = { workspace = true, default-features = true }
frame-benchmarking-cli = { workspace = true, optional = true }
pallet-transaction-payment-rpc = { workspace = true, default-features = true }
sc-basic-authorship = { workspace = true, default-features = true }
sc-cli = { workspace = true, default-features = true }
sc-client-api = { workspace = true, default-features = true }
sc-consensus = { workspace = true, default-features = true }
sc-consensus-aura = { workspace = true, default-features = true }
sc-consensus-manual-seal = { workspace = true, default-features = true }
sc-executor = { workspace = true, default-features = true }
sc-keystore = { workspace = true, default-features = true }
sc-rpc = { workspace = true, default-features = true }
sc-rpc-api = { workspace = true, default-features = true }
sc-service = { workspace = true, default-features = true }
sc-telemetry = { workspace = true, default-features = true }
sc-transaction-pool = { workspace = true, default-features = true }
sc-transaction-pool-api = { workspace = true, default-features = true }
sp-api = { workspace = true, default-features = true }
sp-block-builder = { workspace = true, default-features = true }
sp-blockchain = { workspace = true, default-features = true }
sp-consensus = { workspace = true, default-features = true }
sp-consensus-aura = { workspace = true, default-features = true }
sp-core = { workspace = true, default-features = true }
sp-runtime = { workspace = true, default-features = true }
sp-timestamp = { workspace = true, default-features = true }
substrate-frame-rpc-system = { workspace = true, default-features = true }
sp-inherents = { workspace = true, default-features = true }
pallet-contracts = { workspace = true, default-features = true }
sc-network = { workspace = true, default-features = true }
sc-network-common = { workspace = true, default-features = true }
sc-network-sync = { workspace = true, default-features = true }
hex-literal = { workspace = true, default-features = true }
fc-consensus = { workspace = true, default-features = true }
fc-db = { workspace = true, default-features = true }
fc-mapping-sync = { workspace = true, default-features = true }
fc-rpc = { workspace = true, default-features = true }
fc-rpc-core = { workspace = true, default-features = true }
fc-api = { workspace = true, default-features = true }
fp-consensus = { workspace = true, default-features = true }
fp-storage = { workspace = true, default-features = true }
fp-rpc = { workspace = true, default-features = true }
pallet-base-fee = { workspace = true, default-features = true }
pallet-dynamic-fee = { workspace = true, default-features = true }
pallet-ethereum = { workspace = true, default-features = true }
pallet-evm = { workspace = true, default-features = true }
tokio = { workspace = true, default-features = true, features = [ "macros", "sync" ] }
sc-tracing = { workspace = true, default-features = true }
cumulus-client-cli = { workspace = true, default-features = true }
cumulus-client-network = { workspace = true, default-features = true }
cumulus-client-service = { workspace = true, default-features = true }
cumulus-client-consensus-aura = { workspace = true, default-features = true }
cumulus-client-consensus-common = { workspace = true, default-features = true }
cumulus-client-consensus-relay-chain = { workspace = true, default-features = true }
cumulus-client-collator = { workspace = true, default-features = true }
cumulus-client-consensus-proposer = { workspace = true, default-features = true }
cumulus-relay-chain-minimal-node = { workspace = true, default-features = true }
cumulus-relay-chain-interface = { workspace = true, default-features = true }
cumulus-relay-chain-inprocess-interface = { workspace = true, default-features = true }
cumulus-relay-chain-rpc-interface = { workspace = true, default-features = true }
cumulus-pallet-xcmp-queue = { workspace = true, default-features = true }
cumulus-primitives-core = { workspace = true, default-features = true }
cumulus-primitives-aura = { workspace = true, default-features = true }
cumulus-primitives-parachain-inherent = { workspace = true, default-features = true }
cumulus-test-relay-sproof-builder = { workspace = true, default-features = true }
substrate-prometheus-endpoint = { workspace = true, default-features = true }
polkadot-primitives = { workspace = true, default-features = true }
polkadot-parachain = { workspace = true, default-features = true }
polkadot-service = { workspace = true, default-features = true }
polkadot-cli = { workspace = true, default-features = true, optional = true }
sp-session = { workspace = true, default-features = true }
sp-keystore = { workspace = true, default-features = true }
sp-transaction-pool = { workspace = true, default-features = true }
sp-offchain = { workspace = true, default-features = true }
sc-chain-spec = { workspace = true, default-features = true }
fp-dynamic-fee = { workspace = true, default-features = true }
orml-xtokens = { workspace = true, default-features = true }
cumulus-pallet-parachain-system = { workspace = true, default-features = true }
peaq-pallet-did-rpc = { workspace = true, default-features = true }
peaq-pallet-rbac-rpc = { workspace = true, default-features = true }
xcm = { workspace = true, default-features = true }
peaq-pallet-storage-rpc = { workspace = true, default-features = true }
zenlink-protocol = { workspace = true, default-features = true }
zenlink-protocol-rpc = { workspace = true, default-features = true }
zenlink-protocol-runtime-api = { workspace = true, default-features = true }
try-runtime-cli = { workspace = true, optional = true }
sp-io = {workspace = true, default-features = true}

peaq-dev-runtime = { path = "../runtime/peaq-dev" }
peaq-krest-runtime = { path = "../runtime/krest" }
peaq-runtime = { path = "../runtime/peaq" }
peaq-primitives-ext = { path = "../primitives/ext" }
peaq-rpc-debug = { path = "../client/rpc/debug" }
peaq-rpc-primitives-debug = { path = "../primitives/rpc/debug" }
peaq-rpc-primitives-txpool = { path = "../primitives/rpc/txpool" }
peaq-rpc-trace = { path = "../client/rpc/trace" }
peaq-rpc-txpool = { path = "../client/rpc/txpool" }
pallet-block-reward = { path = "../pallets/block-reward" }
peaq-primitives-xcm = { path = "../primitives/xcm" }
runtime-common = { path = "../runtime/common" }
inflation-manager ={ path = "../pallets/inflation-manager" }

[features]
default = [
	"aura",
	"polkadot-cli",
	"experimental",
	"parameterized-consensus-hook"
	]
experimental = [
	"peaq-dev-runtime/experimental",
]
parameterized-consensus-hook = [
	"peaq-dev-runtime/parameterized-consensus-hook",
]
aura = [
	"peaq-dev-runtime/aura",
	"peaq-krest-runtime/aura"
]
runtime-benchmarks = [
	"frame-benchmarking-cli",
	"peaq-krest-runtime/runtime-benchmarks",
	"peaq-dev-runtime/runtime-benchmarks",
	"peaq-runtime/runtime-benchmarks",
	"polkadot-cli/runtime-benchmarks"
]
try-runtime = [
	"peaq-dev-runtime/try-runtime",
	"peaq-krest-runtime/try-runtime",
	"peaq-runtime/try-runtime",
	"try-runtime-cli/try-runtime"
]
