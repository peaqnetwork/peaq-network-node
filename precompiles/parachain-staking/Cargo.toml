[package]
name = "pallet-evm-precompile-parachain-staking"
description = "A Precompile to expose a parachain's staking functionality to the EVM."
version = "0.0.1"
edition = "2021"
authors = [ "Peaq" ]

[dependencies]
log = { workspace = true }
num_enum = { workspace = true }
slices = { workspace = true }

# Peaq
precompile-utils = { path = "../utils", default-features = false }
parachain-staking = { path = "../../pallets/parachain-staking", default-features = false }
address-unification = { path = "../../pallets/address-unification", default-features = false }

# Substrate
parity-scale-codec = { workspace = true, features = ["max-encoded-len"] }
frame-support = { workspace = true }
frame-system = { workspace = true }
pallet-balances = { workspace = true }
sp-core = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-std = { workspace = true }

# Frontier
fp-evm = { workspace = true }
pallet-evm = { workspace = true }

[dev-dependencies]
pallet-aura = { workspace = true, default-features = false }
sp-consensus-aura = { workspace = true, default-features = false }
peaq-primitives-xcm = { path = "../../primitives/xcm", default-features = false }
derive_more = { workspace = true }
serde = { workspace = true }
sha3 = { workspace = true }
precompile-utils = { path = "../utils", features = [ "std", "testing" ] }
pallet-timestamp = { workspace = true, features = [ "std" ] }
scale-info = { workspace = true }
pallet-authorship = { workspace = true, default-features = false }
pallet-session = { workspace = true, default-features = false }

[features]
default = ["std", "experimental"]
experimental = [
	"pallet-aura/experimental",
]
std = [
	"parity-scale-codec/std",
	"fp-evm/std",
	"frame-support/std",
	"frame-system/std",
	"pallet-evm/std",
	"pallet-balances/std",
	"parachain-staking/std",
	"precompile-utils/std",
	"sp-core/std",
	"sp-io/std",
	"sp-runtime/std",
	"sp-std/std",
	"sp-consensus-aura/std",
	"pallet-aura/std",
	"pallet-authorship/std",
	"pallet-session/std",
	"address-unification/std",
	"peaq-primitives-xcm/std",
]
